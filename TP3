#include <WiFi.h>
#include <WiFiClient.h>
#include <WebServer.h>
#include <DHT.h>

// Pines de LEDs actualizados a pines v치lidos del ESP32
const int LED_PINS[] = {2, 4, 16, 17, 5}; // Ejemplo de pines disponibles en el ESP32
#define PINDHT 21
#define DHTTYPE DHT11

// Definici칩n de botones
#define BUTTON_UP 12
#define BUTTON_DOWN 13

// Credenciales WiFi
const char* ssid = "IoTB";
const char* password = "inventaronelVAR";

// Objeto DHT
DHT dht(PINDHT, DHTTYPE);

// Umbrales
int lowerThreshold = 30;
int upperThreshold = 70;

// Servidor web en el puerto 80
WebServer server(80);

// P치gina web HTML
const char* html = R"=====( ... c칩digo HTML ... )=====";

void handleRoot() {
  server.send(200, "text/html", html);
}

void handleReadings() {
  float h = dht.readHumidity();
  if (isnan(h)) {
    server.send(500, "text/plain", "Error reading DHT sensor!");
    return;
  }
  String json = "{\"humidity\":" + String(h) + 
                ",\"lower\":" + String(lowerThreshold) + 
                ",\"upper\":" + String(upperThreshold) + "}";
  server.send(200, "application/json", json);
}

void connectToWiFi() {
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConnected!");
  Serial.println("IP address: " + WiFi.localIP().toString());
}

void setup() {
  Serial.begin(115200);
  dht.begin();
  for (int i = 0; i < 5; i++) {
    pinMode(LED_PINS[i], OUTPUT);
  }
  pinMode(BUTTON_UP, INPUT_PULLUP);
  pinMode(BUTTON_DOWN, INPUT_PULLUP);

  connectToWiFi();
  
  server.on("/", handleRoot);
  server.on("/readings", handleReadings);
  server.begin();
  Serial.println("HTTP server started");
}

void updateLEDs(float humidity) {
  for (int i = 0; i < 5; i++) {
    if (humidity >= lowerThreshold + i * 10) {
      digitalWrite(LED_PINS[i], HIGH);
    } else {
      digitalWrite(LED_PINS[i], LOW);
    }
  }
}

void adjustThresholds() {
  if (digitalRead(BUTTON_UP) == LOW && upperThreshold < 100) {
    lowerThreshold += 5;
    upperThreshold += 5;
    delay(200);
  }
  if (digitalRead(BUTTON_DOWN) == LOW && lowerThreshold > 0) {
    lowerThreshold -= 5;
    upperThreshold -= 5;
    delay(200);
  }
}

void loop() {
  server.handleClient();
  float humidity = dht.readHumidity();
  if (!isnan(humidity)) {
    Serial.printf("Humidity: %.2f %%\n", humidity);
    updateLEDs(humidity);
  } else {
    Serial.println("Failed to read from DHT sensor!");
  }
  adjustThresholds();
  delay(200);
}
